{
  "openapi": "3.0.0",
  "info": {
    "title": "WebShop24",
    "description": "This is the best WebShop you can find.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://petstore.swagger.io/v2"
    }
  ],
  "tags": [
    {
      "name": "buyer",
      "description": "Everything about buyers"
    },
    {
      "name": "seller",
      "description": "Everything about sellers"
    },
    {
      "name": "article",
      "description": "Everything about articles"
    },
    {
      "name": "order",
      "description": "Everything about orders"
    },
    {
      "name": "cart",
      "description": "Everything about shopping carts"
    }
  ],
  "paths": {
    "/buyer": {
      "post": {
        "tags": [
          "buyer"
        ],
        "summary": "Create a new buyer",
        "description": "The Post request registrates a new buyer",
        "operationId": "createBuyer",
        "requestBody": {
          "$ref": "#/components/requestBodies/Buyer"
        },
        "responses": {
          "400": {
            "description": "User Data incomplete"
          },
          "403": {
            "description": "The given Zip-Code doesn't exist or is not in the given city.\nBuyer with this Email already exists.\nInvalid Email.\nPassword is not secure."
          },
          "500": {
            "description": "Internal Server Error."
          },
          "201": {
            "description": "Buyer created",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "firstName": "Tarek",
                  "lastName": "Bürner",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "buyer"
        ],
        "summary": "Get all buyers",
        "description": "Not used in the frontend application, but supported in the backend",
        "operationId": "getBuyers",
        "responses": {
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Buyers returned",
            "content": {
              "application/json": {
                "example": [{
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "firstName": "Tarek",
                  "lastName": "Bürner",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                },
                  {
                    "_id": "cWGtlAnhcsVViidk",
                    "password": "Test123#",
                    "firstName": "Tarek",
                    "lastName": "Bürner",
                    "email": "test@test.de",
                    "iban": "DE1234567890",
                    "address": "Leiser Weg 12",
                    "zipCode": 70569,
                    "city": "Stuttgart",
                    "updated-at":"2024-01-07T17:15:24.623Z",
                    "created-at": "2024-01-07T17:15:24.623Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/buyer/{buyerID}": {
      "get": {
        "tags": [
          "buyer"
        ],
        "summary": "Get Buyer by BuyerID",
        "operationId": "getBuyerByID",
        "responses": {
          "404": {
            "description": "Buyer not found"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Buyer returned",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "firstName": "Tarek",
                  "lastName": "Bürner",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "buyer"
        ],
        "summary": "Update Buyer",
        "operationId": "updateBuyerByID",
        "requestBody": {
          "$ref": "#/components/requestBodies/BuyerPatch"
        },
        "responses": {
          "400": {
            "description": "User Data incomplete"
          },
          "403": {
            "description": "The given Zip-Code doesn't exist or is not in the given city.\nInvalid Email.\nPassword is not secure."
          },
          "401": {
            "description": "Wrong Password"
          },
          "404": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Buyer updated",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "firstName": "Tarek",
                  "lastName": "Bürner",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "buyer"
        ],
        "summary": "Delete Buyer",
        "operationId": "deleteBuyer",
        "responses": {
          "401": {
            "description": "Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Buyer deleted"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/buyer/login": {
      "post": {
        "tags": [
          "buyer"
        ],
        "summary": "Login as Buyer",
        "operationId": "loginBuyer",
        "responses": {
          "401": {
            "description": "Authorization Header missing.\nWrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Login succesfull"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
        }
      },
    "/seller": {
      "post": {
        "tags": [
          "seller"
        ],
        "summary": "Create a new seller",
        "description": "The Post Request registrates a new seller",
        "operationId": "createSeller",
        "requestBody": {
          "$ref": "#/components/requestBodies/Seller"
        },
        "responses": {
          "400": {
            "description": "User Data uncomplete"
          },
          "403": {
            "description": "The given Zip-Code doesn't exist or is not in the given city.\nSeller with this Email already exists.\nInvalid Email.\nPassword is not secure."
          },
          "201": {
            "description": "Seller created",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "brand": "testBrand",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "seller"
        ],
        "summary": "Get all sellers",
        "description": "Not used in the frontend application, but supported in the backend",
        "operationId": "getSellers",
        "responses": {
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Sellers returned",
            "content": {
              "application/json": {
                "example": [
                  {
                    "_id": "cWGtlAnhcsVViidg",
                    "password": "Test123#",
                    "brand": "testBrand",
                    "email": "test@test.de",
                    "iban": "DE1234567890",
                    "address": "Leiser Weg 12",
                    "zipCode": 70569,
                    "city": "Stuttgart",
                    "updated-at":"2024-01-07T17:15:24.623Z",
                    "created-at": "2024-01-07T17:15:24.623Z"
                  },
                  {
                    "_id": "cWGtlAnhcsVViidk",
                    "password": "Test123#",
                    "brand": "testBrand2",
                    "email": "test@test.de",
                    "iban": "DE1234567890",
                    "address": "Leiser Weg 12",
                    "zipCode": 70569,
                    "city": "Stuttgart",
                    "updated-at":"2024-01-07T17:15:24.623Z",
                    "created-at": "2024-01-07T17:15:24.623Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/seller/{sellerId}": {
      "get": {
        "tags": [
          "seller"
        ],
        "summary": "Get Seller by SellerID",
        "operationId": "getSellerByID",
        "requestBody": {
          "$ref": "#/components/requestBodies/Buyer"
        },
        "responses": {
          "404": {
            "description": "Seller not found"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Seller returned",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "brand": "testBrand",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "seller"
        ],
        "summary": "Update Seller",
        "operationId": "updateSellerByID",
        "requestBody": {
          "$ref": "#/components/requestBodies/SellerPatch"
        },
        "responses": {
          "400": {
            "description": "User Data incomplete"
          },
          "403": {
            "description": "The given Zip-Code doesn't exist or is not in the given city.\nInvalid Email.\nPassword is not secure."
          },
          "401": {
            "description": "Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "200": {
            "description": "Seller updated",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "password": "Test123#",
                  "brand": "testBrand",
                  "email": "test@test.de",
                  "iban": "DE1234567890",
                  "address": "Leiser Weg 12",
                  "zipCode": 70569,
                  "city": "Stuttgart",
                  "updated-at":"2024-01-07T17:15:24.623Z",
                  "created-at": "2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "seller"
        ],
        "summary": "Delete Seller",
        "operationId": "deleteSeller",
        "requestBody": {
          "$ref": "#/components/requestBodies/Buyer"
        },
        "responses": {
          "401": {
            "description": "Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Seller deleted"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/seller/login": {
      "post": {
        "tags": [
          "buyer"
        ],
        "summary": "Login as Seller",
        "operationId": "loginSeller",
        "responses": {
          "401": {
            "description": "Authorization Header missing.\nWrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Login succesfull"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/article": {
      "post": {
        "tags": [
          "article"
        ],
        "summary": "Create a new article",
        "operationId": "createArticle",
        "requestBody": {
          "$ref": "#/components/requestBodies/Article"
        },
        "responses": {
          "400": {
            "description": "Article Data incomplete"
          },
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "201": {
            "description": "Article created",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "title": "Xiaomi 13T Pro",
                  "description": "A really amazing Smartphone",
                  "price": 790.01,
                  "stockQuantity": 1000,
                  "visible": true,
                  "brand": "Xiaomi",
                  "seller": "cWGtlAnhcsVViidg",
                  "searchingKeywords": ["Smartphone", "Xiaomi", "keyword3"],
                  "createdAt":"2023-12-15T08:05:36.701Z",
                  "updatedAt":"2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "article"
        ],
        "summary": "Get all articles",
        "operationId": "getArticles",
        "responses": {
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Articles returned",
            "content": {
              "application/json": {
                "example": [{
                  "_id": "cWGtlAnhcsVViidg",
                  "title": "Xiaomi 13T Pro",
                  "description": "A really amazing Smartphone",
                  "price": 790.01,
                  "stockQuantity": 1000,
                  "visible": true,
                  "brand": "Xiaomi",
                  "seller": "cWGtlAnhcsVViidg",
                  "searchingKeywords": ["Smartphone", "Xiaomi", "keyword3"],
                  "createdAt":"2023-12-15T08:05:36.701Z",
                  "updatedAt":"2024-01-07T17:15:24.623Z"
                },
                  {
                    "_id": "cWGtlAnhcsVViidk",
                    "title": "Xiaomi 13T Pro",
                    "description": "A really amazing Smartphone",
                    "price": 790.01,
                    "stockQuantity": 1000,
                    "visible": true,
                    "brand": "Xiaomi",
                    "seller": "cWGtlAnhcsVViidg",
                    "searchingKeywords": ["Smartphone", "Xiaomi", "keyword3"],
                    "createdAt":"2023-12-15T08:05:36.701Z",
                    "updatedAt":"2024-01-07T17:15:24.623Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/article/{articleID}": {
      "get": {
        "tags": [
          "article"
        ],
        "summary": "Get Article by ArticleID",
        "operationId": "getArticleByID",
        "responses": {
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Article returned",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "title": "Xiaomi 13T Pro",
                  "description": "A really amazing Smartphone",
                  "price": 790.01,
                  "stockQuantity": 1000,
                  "visible": true,
                  "brand": "Xiaomi",
                  "seller": "cWGtlAnhcsVViidg",
                  "searchingKeywords": ["Smartphone", "Xiaomi", "keyword3"],
                  "createdAt":"2023-12-15T08:05:36.701Z",
                  "updatedAt":"2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "article"
        ],
        "summary": "Update Article",
        "operationId": "updateArticleByID",
        "requestBody": {
          "$ref": "#/components/requestBodies/ArticlePatch"
        },
        "responses": {
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Seller updated",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "title": "Xiaomi 13T Pro",
                  "description": "A really amazing Smartphone",
                  "price": 790.01,
                  "stockQuantity": 1000,
                  "visible": true,
                  "brand": "Xiaomi",
                  "seller": "cWGtlAnhcsVViidg",
                  "searchingKeywords": ["Smartphone", "Xiaomi", "keyword3"],
                  "createdAt":"2023-12-15T08:05:36.701Z",
                  "updatedAt":"2024-01-07T17:15:24.623Z"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "article"
        ],
        "summary": "Delete Article",
        "operationId": "deleteArticle",
        "responses": {
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Article deleted"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Create a new order",
        "operationId": "createOrder",
        "requestBody": {
          "$ref": "#/components/requestBodies/Order"
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "201": {
            "description": "Order created",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "buyer": "cWGtlAnhcsVViidg",
                  "articles": [{
                    "productID": "cWGtlAnhcsVViidg",
                    "quantity": 2
                  }
                  ],
                  "totalAmount": 790.01,
                  "seller":"ofqRrrA7womznAeY",
                  "updatedAt":"2024-01-07T17:15:24.625Z",
                  "orderDate": "2023-12-01T14:30:00Z",
                  "status": "placed"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get all orders",
        "operationId": "getOrders",
        "responses": {
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Orders returned",
            "content": {
              "application/json": {
                "example": [{
                  "_id": "cWGtlAnhcsVViidg",
                  "buyer": "cWGtlAnhcsVViidg",
                  "articles": [{
                    "productID": "cWGtlAnhcsVViidg",
                    "quantity": 2
                  }
                  ],
                  "totalAmount": 790.01,
                  "seller":"ofqRrrA7womznAeY",
                  "updatedAt":"2024-01-07T17:15:24.625Z",
                  "orderDate": "2023-12-01T14:30:00Z",
                  "status": "placed"
                }]
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/order/{orderID}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get Order by OrderID",
        "operationId": "getOrderByID",
        "responses": {
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Order returned",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "buyer": "cWGtlAnhcsVViidg",
                  "articles": [{
                    "productID": "cWGtlAnhcsVViidg",
                    "quantity": 2
                  }
                  ],
                  "totalAmount": 790.01,
                  "seller":"ofqRrrA7womznAeY",
                  "updatedAt":"2024-01-07T17:15:24.625Z",
                  "orderDate": "2023-12-01T14:30:00Z",
                  "status": "placed"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "order"
        ],
        "summary": "Patch Order by OrderID",
        "operationId": "patchOrder",
        "requestBody": {
          "$ref": "#/components/requestBodies/OrderPatch"
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Order returned",
            "content": {
              "application/json": {
                "example": {
                  "_id": "cWGtlAnhcsVViidg",
                  "buyer": "cWGtlAnhcsVViidg",
                  "articles": [{
                    "productID": "cWGtlAnhcsVViidg",
                    "quantity": 2
                  }
                  ],
                  "totalAmount": 790.01,
                  "seller":"ofqRrrA7womznAeY",
                  "updatedAt":"2024-01-07T17:15:24.625Z",
                  "orderDate": "2023-12-01T14:30:00Z",
                  "status": "placed"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },

    "/cart": {
      "post": {
        "tags": [
          "cart"
        ],
        "summary": "Create a new Shopping-Cart",
        "operationId": "createCart",
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart"
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "201": {
            "description": "Cart created",
            "content": {
              "application/json": {
                "example": {
                  "articles": [
                    {
                      "productId": "jwxq65KLiuM1C2z",
                      "quantity": 2
                    },
                    {
                      "productId": "jwxq65KLiuM1C2zz",
                      "quantity": 2
                    }
                  ],
                  "buyer": "pyh0X1ZFKfI04HMX",
                  "seller": "pyh0X1ZFKfI04HMX",
                  "totalAmount": 4000.04,
                  "createdAt": "2024-01-07T17:15:15.133Z",
                  "updatedAt": "2024-01-07T17:15:16.469Z",
                  "_id": "ObNRuplzhb0HPUhp"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/cart/{cartID}": {
      "get": {
        "tags": [
          "cart"
        ],
        "summary": "Get Shopping-Cart by cartID",
        "operationId": "getCartByID",
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart"
        },
        "responses": {
          "404": {
            "description": "Cart not found"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Cart returned",
            "content": {
              "application/json": {
                "example": {
                  "articles": [
                    {
                      "productId": "jwxq65KLiuM1C2z",
                      "quantity": 2
                    },
                    {
                      "productId": "jwxq65KLiuM1C2zz",
                      "quantity": 2
                    }
                  ],
                  "buyer": "pyh0X1ZFKfI04HMX",
                  "seller": "pyh0X1ZFKfI04HMX",
                  "totalAmount": 4000.04,
                  "createdAt": "2024-01-07T17:15:15.133Z",
                  "updatedAt": "2024-01-07T17:15:16.469Z",
                  "_id": "ObNRuplzhb0HPUhp"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "cart"
        ],
        "summary": "Update Shopping-Cart",
        "operationId": "updateCartByID",
        "requestBody": {
          "$ref": "#/components/requestBodies/Cart"
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Cart updated",
            "content": {
              "application/json": {
                "example": {
                  "articles": [
                    {
                      "productId": "jwxq65KLiuM1C2z",
                      "quantity": 2
                    },
                    {
                      "productId": "jwxq65KLiuM1C2zz",
                      "quantity": 2
                    }
                  ],
                  "buyer": "pyh0X1ZFKfI04HMX",
                  "seller": "pyh0X1ZFKfI04HMX",
                  "totalAmount": 4000.04,
                  "createdAt": "2024-01-07T17:15:15.133Z",
                  "updatedAt": "2024-01-07T17:15:16.469Z",
                  "_id": "ObNRuplzhb0HPUhp"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "cart"
        ],
        "summary": "Delete Shopping-Cart",
        "operationId": "deleteCart",
        "requestBody": {
          "$ref": "#/components/requestBodies/Buyer"
        },
        "responses": {
          "401": {
            "description": "Authorization Header missing.\n Wrong Password"
          },
          "403": {
            "description": "Wrong Username"
          },
          "500": {
            "description": "Internal Server Error."
          },
          "200": {
            "description": "Cart deleted"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "type": "object",
        "required": [
          "title",
          "description",
          "price",
          "stockQuantity",
          "visible",
          "brand",
          "searchingKeywords"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Xiaomi 13T Pro"
          },
          "description": {
            "type": "string",
            "example": "A really amazing Smartphone"
          },
          "price": {
            "type": "number",
            "format": "double",
            "multipleOf": 0.01,
            "example": 790.01
          },
          "stockQuantity": {
            "type": "integer",
            "example": 1000
          },
          "visible": {
            "type": "boolean",
            "example": true
          },
          "brand": {
            "type": "string",
            "example": "Xiaomi"
          },
          "searchingKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Smartphone", "Xiaomi", "keyword3"]
          },
          "seller": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          }
        }
      },
      "ArticlePatch": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Xiaomi 13T Pro"
          },
          "description": {
            "type": "string",
            "example": "A really amazing Smartphone"
          },
          "price": {
            "type": "number",
            "format": "double",
            "multipleOf": 0.01,
            "example": 790.01
          },
          "stockQuantity": {
            "type": "integer",
            "example": 1000
          },
          "visible": {
            "type": "boolean",
            "example": true
          },
          "brand": {
            "type": "string",
            "example": "Xiaomi"
          },
          "searchingKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Smartphone", "Xiaomi", "keyword3"]
          }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "buyer",
          "articles",
          "status"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "buyer": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "seller": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "articles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "string",
                  "format": "BSON",
                  "example": "cWGtlAnhcsVViidg"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 3
                }
              }
            },
            "example": [
              {"productID": "cWGtlAnhcsVViidg", "quantity": 2},
              {"productID": "xyz123", "quantity": 1}
            ]
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "multipleOf": 0.01,
            "readOnly": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed","payed", "shipped", "delivered", "canceled"
            ]
          }
        }
      },
      "OrderPatch": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed","payed", "shipped", "delivered", "canceled"
            ]
          }
        }
      },
      "BuyerPatch": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$",
            "example": "Test123#"
          },
          "firstName": {
            "type": "string",
            "example": "Tarek"
          },
          "lastName": {
            "type": "string",
            "example": "Bürner"
          },
          "email": {
            "type": "string",
            "example": "test@test.de"
          },
          "address": {
            "type": "string",
            "example": "Leiser Weg 12"
          },
          "zipCode": {
            "type": "number",
            "pattern": "5 digits, existing zipCode",
            "example": 70569
          },
          "city": {
            "type": "string",
            "pattern": "must match the zipCode",
            "example": "Stuttgart"
          }
        }
      },
      "Buyer": {
        "required": [
          "firstName",
          "lastName",
          "email",
          "password",
          "iban",
          "address",
          "zipCode",
          "city"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$",
            "example": "Test123#"
          },
          "firstName": {
            "type": "string",
            "example": "Tarek"
          },
          "lastName": {
            "type": "string",
            "example": "Bürner"
          },
          "email": {
            "type": "string",
            "example": "test@test.de"
          },
          "address": {
            "type": "string",
            "example": "Leiser Weg 12"
          },
          "zipCode": {
            "type": "number",
            "pattern": "5 digits, existing zipCode",
            "example": 70569
          },
          "city": {
            "type": "string",
            "pattern": "must match the zipCode",
            "example": "Stuttgart"
          }
        }
      },
      "Seller": {
        "required": [
          "email",
          "password",
          "address",
          "iban",
          "brand",
          "zipCode",
          "city"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$",
            "example": "Test123#"
          },
          "brand": {
            "type": "string",
            "example": "Something"
          },
          "email": {
            "type": "string",
            "example": "test@test.de"
          },
          "iban": {
            "type": "string",
            "example": "DE1234567890"
          },
          "address": {
            "type": "string",
            "example": "Leiser Weg 12"
          },
          "zipCode": {
            "type": "number",
            "pattern": "5 digit number",
            "example": 70569
          },
          "city": {
            "type": "string",
            "pattern": "must match the zipCode",
            "example": "Stuttgart"
          }
        }
      },
      "SellerPatch": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "BSON",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).{8,}$",
            "example": "Test123#"
          },
          "brand": {
            "type": "string",
            "example": "Something"
          },
          "email": {
            "type": "string",
            "example": "test@test.de"
          },
          "iban": {
            "type": "string",
            "example": "DE1234567890"
          },
          "address": {
            "type": "string",
            "example": "Leiser Weg 12"
          },
          "zipCode": {
            "type": "number",
            "pattern": "5 digit number",
            "example": 70569
          },
          "city": {
            "type": "string",
            "pattern": "must match the zipCode",
            "example": "Stuttgart"
          }
        }
      },
      "Cart": {
        "type": "object",
        "required": "articles",
        "properties": {
          "articles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "string",
                  "format": "BSON",
                  "example": "cWGtlAnhcsVViidg"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 3
                }
              }
            },
            "example": [
              {"productID": "cWGtlAnhcsVViidg", "quantity": 2},
              {"productID": "xyz123", "quantity": 1}
            ]
          }
        }
      },

      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "pet_petId_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated name of the pet"
          },
          "status": {
            "type": "string",
            "description": "Updated status of the pet"
          }
        }
      }
    },
    "requestBodies": {
      "Buyer": {
        "description": "Buyer, that should be registered",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Buyer"
            }
          }
        },
        "required": true
      },
      "BuyerPatch": {
        "description": "Buyer, that should be updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BuyerPatch"
            }
          }
        }
      },
      "Seller": {
        "description": "Seller, that should be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Seller"
            }
          }
        },
        "required": true
      },
      "SellerPatch": {
        "description": "Seller, that should be updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SellerPatch"
            }
          }
        }
      },
      "Article": {
        "description": "Article, that should be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Article"
            }
          }
        }
      },
      "ArticlePatch": {
        "description": "Article, that should be updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ArticlePatch"
            }
          }
        }
      },
      "Order": {
        "description": "Order, that should be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        }
      },
      "OrderPatch": {
        "description": "Order, that should be updated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OrderPatch"
            }
          }
        }
      },
      "Cart": {
        "description": "Cart, that should be created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Cart"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "examples": {
      "BasicAuthExample": {
        "value": "Basic base64encodedstring"
      }
    }
  }
}
